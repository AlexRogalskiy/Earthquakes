package ru.inno.earthquakes.model.dbobjects;

import io.objectbox.BoxStore;
import io.objectbox.annotation.Entity;
import io.objectbox.annotation.Generated;
import io.objectbox.annotation.Id;
import io.objectbox.annotation.Relation;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.relation.ToOne;

/**
 * @author Artur Badretdinov (Gaket)
 *         20.07.17.
 */
@Entity
public class DbLocation {

    @Id
    private long id;

    private String name;
    @Relation
    Coordinates coords;

    /**
     * Used to resolve relations
     */
    @Internal
    @Generated(1307364262)
    transient BoxStore __boxStore;

    @Generated(1089986594)
    @Internal
    /** This constructor was generated by ObjectBox and may change any time. */
    public DbLocation(long id, String name, long coordsId) {
        this.id = id;
        this.name = name;
        this.coordsToOne.setTargetId(coordsId);
    }

    @Generated(1398593651)
    public DbLocation() {
    }


    @Internal
    @Generated(1639043033)
    transient ToOne<Coordinates> coordsToOne = new ToOne<>(this,
            DbLocation_.coords);





    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }


    /** To-one relationship, resolved on first access. */
    @Generated(528639152)
    public Coordinates getCoords() {
        coords = coordsToOne.getTarget();
        return coords;
    }


    /** Set the to-one relation including its ID property. */
    @Generated(903062575)
    public void setCoords(Coordinates coords) {
        coordsToOne.setTarget(coords);
        this.coords = coords;
    }


}
